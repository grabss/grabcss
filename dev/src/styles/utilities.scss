@use './mediaquery' as mediaquery;
@use './mixins' as mixins;
@use './variables' as variables;
@use 'sass:list';

// Define utility configurations for cleaner generation
$utility-configs: (
  'text': (
    variables.$colors,
    'color'
  ),
  'bg': (
    variables.$colors,
    'background-color'
  ),
  'fs': (
    variables.$font-sizes,
    'font-size'
  ),
  'fw': (
    variables.$font-weights,
    'font-weight'
  ),
  'text-align': (
    variables.$text-directions,
    'text-align'
  ),
  'lh': (
    variables.$line-heights,
    'line-height'
  ),
  'v': (
    variables.$visibilities,
    'visibility'
  ),
  'd': (
    variables.$displays,
    'display'
  ),
  'ps': (
    variables.$positions,
    'position'
  ),
  'g': (
    variables.$spaces,
    'gap'
  ),
  'rg': (
    variables.$spaces,
    'row-gap'
  ),
  'cg': (
    variables.$spaces,
    'column-gap'
  ),
  'w': (
    variables.$sizes,
    'width'
  ),
  'h': (
    variables.$sizes,
    'height'
  ),
  'ws': (
    variables.$white-spaces,
    'white-space'
  ),
  'wb': (
    variables.$word-breaks,
    'word-break'
  ),
  'flex-direction': (
    variables.$flex-directions,
    'flex-direction'
  ),
  'flex-wrap': (
    variables.$flex-wraps,
    'flex-wrap'
  ),
  'justify-content': (
    variables.$justify-content-positions,
    'justify-content'
  ),
  'align-items': (
    variables.$align-items-positions,
    'align-items'
  )
);

// Generate base utilities
@each $prefix, $config in $utility-configs {
  @include mixins.generate-classes(
    list.nth($config, 1),
    $prefix,
    list.nth($config, 2)
  );
}

// Generate spacing utilities (margin & padding)
@include mixins.generate-space-classes('m', 'margin');
@include mixins.generate-space-classes('p', 'padding');

// Fixed utilities
.flex-1 {
  flex: 1;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

// Generate breakpoint utilities
@each $prefix, $config in $utility-configs {
  @include mixins.generate-breakpoint-classes(
    list.nth($config, 1),
    $prefix,
    list.nth($config, 2)
  );
}

// Generate breakpoint spacing utilities
@include mixins.generate-breakpoint-space-classes('m', 'margin');
@include mixins.generate-breakpoint-space-classes('p', 'padding');

// Breakpoint fixed utilities
@each $breakpoint, $_ in mediaquery.$breakpoints {
  .#{$breakpoint}\:flex-1 {
    @include mediaquery.mq($breakpoint) {
      flex: 1;
    }
  }

  .#{$breakpoint}\:flex-shrink-0 {
    @include mediaquery.mq($breakpoint) {
      flex-shrink: 0;
    }
  }
}
