@use 'sass:map';
@use 'sass:string';
@use 'sass:math';

// Colors
$color-primary: #00a596 !default;
$color-secondary: #000000 !default;
$color-background: #ffffff !default;
$color-border: #dce1e6 !default;
$color-heading: #00a596 !default;
$color-body: #000000 !default;
$color-link: #0064e6 !default;
$color-muted: #787878 !default;
$color-warning: #ffc107 !default;
$color-danger: #dc3545 !default;

$define-colors: (
  'primary': $color-primary,
  'secondary': $color-secondary,
  'background': $color-background,
  'border': $color-border,
  'heading': $color-heading,
  'body': $color-body,
  'link': $color-link,
  'muted': $color-muted,
  'warning': $color-warning,
  'danger': $color-danger
) !default;

$colors: ();
@each $name, $value in $define-colors {
  $colors: map.merge(
    $colors,
    (
      $name: string.unquote('var(--color-#{$name})')
    )
  );
}

// Font Sizes
$font-size-xs: 12px !default;
$font-size-sm: 14px !default;
$font-size-md: 16px !default;
$font-size-lg: 18px !default;
$font-size-xl: 20px !default;
$font-size-2xl: 22px !default;
$font-size-3xl: 24px !default;
$font-size-4xl: 36px !default;
$font-size-5xl: 40px !default;

$define-font-sizes: (
  'xs': $font-size-xs,
  'sm': $font-size-sm,
  'md': $font-size-md,
  'lg': $font-size-lg,
  'xl': $font-size-xl,
  '2xl': $font-size-2xl,
  '3xl': $font-size-3xl,
  '4xl': $font-size-4xl,
  '5xl': $font-size-5xl
) !default;

$font-sizes: ();
@each $name, $value in $define-font-sizes {
  $font-sizes: map.merge(
    $font-sizes,
    (
      $name: string.unquote('var(--font-size-#{$name})')
    )
  );
}

// Font Weights
$font-weight-normal: 400 !default;
$font-weight-bold: 700 !default;

$define-font-weights: (
  'normal': $font-weight-normal,
  'bold': $font-weight-bold
) !default;

$font-weights: ();
@each $name, $value in $define-font-weights {
  $font-weights: map.merge(
    $font-weights,
    (
      $name: string.unquote('var(--font-weight-#{$name})')
    )
  );
}

// Line Heights
$line-height-default: 1 !default;
$line-height-xs: 1.2 !default;
$line-height-sm: 1.4 !default;
$line-height-md: 1.6 !default;
$line-height-lg: 1.8 !default;

$define-line-heights: (
  'default': $line-height-default,
  'xs': $line-height-xs,
  'sm': $line-height-sm,
  'md': $line-height-md,
  'lg': $line-height-lg
) !default;

$line-heights: ();
@each $name, $value in $define-line-heights {
  $line-heights: map.merge(
    $line-heights,
    (
      $name: string.unquote('var(--line-height-#{$name})')
    )
  );
}

// Spacing
$space-2xs: 5px !default;
$space-xs: 10px !default;
$space-sm: 15px !default;
$space-md: 20px !default;
$space-lg: 25px !default;
$space-xl: 30px !default;
$space-2xl: 35px !default;
$space-3xl: 40px !default;
$space-4xl: 45px !default;
$space-5xl: 50px !default;

$define-spaces: (
  'auto': auto,
  'none': 0,
  '2xs': $space-2xs,
  'xs': $space-xs,
  'sm': $space-sm,
  'md': $space-md,
  'lg': $space-lg,
  'xl': $space-xl,
  '2xl': $space-2xl,
  '3xl': $space-3xl,
  '4xl': $space-4xl,
  '5xl': $space-5xl
) !default;

$spaces: ();
@each $name, $value in $define-spaces {
  $spaces: map.merge(
    $spaces,
    (
      $name: string.unquote('var(--space-#{$name})')
    )
  );
}

// The following maps are primarily using CSS keyword values
$text-directions: (
  'left': left,
  'center': center,
  'right': right
) !default;

$visibilities: (
  'visible': visible,
  'hidden': hidden
) !default;

$displays: (
  'none': none,
  'contents': contents,
  'inline': inline,
  'inline-block': inline-block,
  'block': block,
  'flex': flex,
  'inline-flex': inline-flex,
  'grid': grid,
  'inline-grid': inline-grid,
  'table-cell': table-cell
) !default;

$positions: (
  'static': static,
  'relative': relative,
  'absolute': absolute,
  'fixed': fixed,
  'sticky': sticky
) !default;

$sizes: (
  'auto': auto,
  'fit-content': fit-content,
  'none': 0,
  '50': 50%,
  '100': 100%
) !default;

$white-spaces: (
  'normal': normal,
  'nowrap': nowrap,
  'pre': pre,
  'pre-wrap': pre-wrap,
  'pre-line': pre-line
) !default;

$word-breaks: (
  'normal': normal,
  'break-all': break-all,
  'keep-all': keep-all,
  'break-word': break-word
) !default;

$flex-directions: (
  'row': row,
  'row-reverse': row-reverse,
  'column': column,
  'column-reverse': column-reverse
) !default;

$flex-wraps: (
  'nowrap': nowrap,
  'wrap': wrap,
  'wrap-reverse': wrap-reverse
) !default;

$justify-content-positions: (
  'start': start,
  'center': center,
  'end': end,
  'flex-start': flex-start,
  'flex-end': flex-end,
  'space-between': space-between,
  'space-around': space-around
) !default;

$align-items-positions: (
  'start': start,
  'center': center,
  'end': end,
  'flex-start': flex-start,
  'flex-end': flex-end
) !default;

// CSS Grid Properties
$grid-template-columns: (
  'none': none,
  '1': repeat(1, minmax(0, 1fr)),
  '2': repeat(2, minmax(0, 1fr)),
  '3': repeat(3, minmax(0, 1fr)),
  '4': repeat(4, minmax(0, 1fr)),
  '5': repeat(5, minmax(0, 1fr)),
  '6': repeat(6, minmax(0, 1fr)),
  '12': repeat(12, minmax(0, 1fr))
) !default;

$grid-template-rows: (
  'none': none,
  '1': repeat(1, minmax(0, 1fr)),
  '2': repeat(2, minmax(0, 1fr)),
  '3': repeat(3, minmax(0, 1fr)),
  '4': repeat(4, minmax(0, 1fr)),
  '6': repeat(6, minmax(0, 1fr))
) !default;

$grid-columns: (
  'auto': auto,
  'span-1': span 1 / span 1,
  'span-2': span 2 / span 2,
  'span-3': span 3 / span 3,
  'span-4': span 4 / span 4,
  'span-5': span 5 / span 5,
  'span-6': span 6 / span 6,
  'span-full': string.unquote('1 / -1')
) !default;

$grid-rows: (
  'auto': auto,
  'span-1': span 1 / span 1,
  'span-2': span 2 / span 2,
  'span-3': span 3 / span 3,
  'span-4': span 4 / span 4,
  'span-6': span 6 / span 6,
  'span-full': string.unquote('1 / -1')
) !default;

$place-content: (
  'center': center,
  'start': start,
  'end': end,
  'between': space-between,
  'around': space-around,
  'evenly': space-evenly,
  'stretch': stretch
) !default;

$place-items: (
  'start': start,
  'end': end,
  'center': center,
  'stretch': stretch
) !default;

$place-self: (
  'auto': auto,
  'start': start,
  'end': end,
  'center': center,
  'stretch': stretch
) !default;

// Opacity
$opacity-0: 0 !default;
$opacity-25: 0.25 !default;
$opacity-50: 0.5 !default;
$opacity-75: 0.75 !default;
$opacity-100: 1 !default;

$define-opacities: (
  '0': $opacity-0,
  '25': $opacity-25,
  '50': $opacity-50,
  '75': $opacity-75,
  '100': $opacity-100
) !default;

$opacities: ();
@each $name, $value in $define-opacities {
  $opacities: map.merge(
    $opacities,
    (
      $name: string.unquote('var(--opacity-#{$name})')
    )
  );
}
